: 大小核為什麼有意義 : 因為任何電腦的任務都能分成2種: : 1. 越快處理完越好的 : 2. 時間內處理完就好的 : 1的話就像壓縮RAR: : 你能一分鐘壓完 就不會想花兩分鐘去壓縮 : 2的話就像看影片: : 你只要下一Frame能保證 在上一Frame的時間內解出來就夠了 : (還有體感相依類的) : 那麼 : 1這類的任務就會交給大核 : 2這類的任務就會交給小核 : 那大小核的差異在哪也不難明白 : 大核將全力提升性能 : 小核將在確保性能下節省功耗與電晶體數量 : 現代cpu太複雜 從解碼到指令預測什麼的 : 投入了大量的電晶體去壓榨IPC : 但太多任務其實根本用不到這種性能 : 好比我正在用PCMAN上PTT : 從鍵盤Key下去、到輸入法跳字出來 : 大核處理可能反應時間是 100ns : 小核處理可能是 1ms : 但 so what? 都不影響我的使用體感。 : 這樣小核省出來的空間 用在行動設備上就是可以省電 : 用在其它地方則是讓大核可以有更多拿來揮霍的電晶體 : : 這次給intel一個讚 : 這是我在2017就在這建議過的事情 : 也是做對的事情 : 只是市場面會不討喜 因為跑分比較不好看 : 不知道AMD會不會跟進 big.LITTLE 的Scheduler其實非常簡單。 https://en.wikipedia.org/wiki/ARM_big.LITTLE 有經過三次演化 Clustered switching Inkernel switcher Heterogeneous multiprocessing Linux在2013年就做好了。你Window有答案抄還做不好就笑死人 Clustered switching https://lwn.net/Articles/481055/ Inkernel switcher https://lwn.net/Articles/539840/ Heterogeneous multiprocessing https://lwn.net/Articles/541005/ HMP其實非常簡單但效能好。最主要有三條規則 Small tasks (those that only use small amounts of CPU time for brief periods) are not worth the trouble to schedule in any sophisticated way. Instead they should just be packed onto a single slow core whenever they wake up and kept there if at all possible. Load balancing should be concerned with the disposition of longrunning tasks only; it should simply pass over the small tasks. Longrunning tasks are best placed on the faster cores. 簡單易懂，成本低，效能好，省電兼顧。x86還沒進big.LITTLE才是奇怪。Jim Keller是名符其實的強，Alder Lake的規劃真的是讓人驚嘆。 簡單講，Small Tasks(時間短的程序）不值得花時間，直接排在LITTLE Cores。長時間的程序才需要花時間排序在big Cores，在這就用原來的Scheduler來排序。 所以把GPU分出來是對的，不需要內建GPU的可以省錢，一半的DIE在這，結果只有20%的人有用。Chiplet也是Jim Keller提出來的概念 kernel有很多cpu和thread的資訊，inkernel switching有用cpu_ frequency來判斷但變太複雜。Tasks長短判斷是一個學問，但第一步就是看kernel call. pelt walt 是補充計算loading的，可是只在cfseas有。 不用丟IOD啊，本來就可以放三顆?不是嗎？ 主要是彈性，cpu才是主要賺錢的，igpu給gf或都可，igpu是雞肋，找成本便宜的。能大概解釋一下裡面的scheduling alg嗎 我在上篇有。留大概的過程 但是不知道他具體是如何做的。我也這麼覺得。其實鄉民只在乎價格而已 :P。就算製程一直卡關，只要賣得比AMD便宜，也是無妨的。樓上，你想太多。這邊價格取向沒錯啊，牙膏目前跟競品比偏貴。本來就整機價格取向啊不然。xt出來價格不夠甜不是一片臭。3600跟10400相比就是差那個錢。我只知道，同樣價錢給我全部大核的贏。GPU絕對不是20%人有用 不要用DIY當DT市場。DT真正的市場是商用 幾乎全部都要內顯 但是這內顯。是真的能亮就好 根本不需要多好 切出去是對的。不過牙膏王的big.LITTLE 我猜應該不是JK提的 因為。LakeField今年就要上了 設計應該在他進來之前就好了。JK可能更大力去推動連主力都要玩big LITTLE跟分割。GPU吧。怎麼知道task要花多少時間。跑了就知道了...。先解決喚醒太慢的問題吧 搞到要禁止睡眠 本末倒置。真棒，給我來一顆，amd的。https://is.gd/gyQFW9。你講的我知道啊 可是一個process或是thread不會事先。知道他的時間長短 我想問的是他內部決定的策略是什。麼。講是很簡單啦 Application老實嗎?。每個都是騙子 誰跟你照規矩。大家為了讓app看起來流暢 全部都用api調大核XD。Android都用這麼久了…程式不老實根本推不動吧。程式會不會騙根本假議題。我也很好奇程式要怎麼騙 可以教一下嗎。跑了就知道了啊。新程序在big Core跑，yield就知道。花多少時間。Kernel本來就紀錄一堆資訊來排程。我知道 所以我是問他內部的算法具體流程是什麼  直。接看費時是已經調度完畢之後的結果而不是過程呀。商用就亮機igpu就好，所以才分gt1, gt2。我是不懂。AMD為什麼不作igpu的chiplet。我補充自己32樓。設定process affinity和prefer都需。要管理者權限 不是隨便一個program想call就能call。所以第一次run當長時間thread，如果不是，就調到。LITTLE。例如常常syscall的就是短程序。不對阿 第一次run時所有的thread時間應該是相同的只。有是否在時間段結束之前主動放棄的差異 調度策略應。該是個動態過程。AMD不做因為不划算啊。server用不到  DT那個io die也不小一顆  過io die串。沒便宜。你syscall（call kernel)就yield了。keyboard,。network，clipboard都是kernel call。call kernel的。機會還蠻高的。可是Renoir那顆那麼大，成本一定很高。。lakefield的Tremont是JK設計的，所以big.LITTLE應該。是jk沒錯。Intel請JK很大的原因是intel 的設計流程。太慢，太沒彈性。JK把Intel設計速度提昇不少。拜託  你做gpu die 黏起來接近3900x的成本  別鬧了。怎麼可能比soc便宜。不要被AMD文宣洗腦了  chiplet最有優勢的戰場就是se。rver  跟hedt  DT其實很虧。直覺想task 在幾個CPU time 沒做完後就會被丟到bi。g上去。我建議你去看下EAS的WALT vs PELT的討論。不是用什麼時間沒做完判斷的 syscall也不直接等同。Loading。內個 Linux 沒有x86的eas 我只能說到這。AMD真的要塞純亮機的GPU其實也簡單 丟IOD就好了。丟IOD也算是個解法拉 不過GF你信他喔。而且這樣DT的IOD也是要花時間成本去重弄過 本來那顆。應該是Server的直接1/4砍下去簡單搞定的 多搞個GPU。又要慢慢驗證 而且主流需要GPU的平台 NB DT表現也。不會好看 最佳解還是就乖乖SOC。DT不要一直拿DIY小眾市場看 真正量都在OEM根本不是。原本Ryzen適合的 現在DIY的設計也是去鑽牙膏王的空。缺 搶下牙膏王最弱的一塊。直接一開始就去硬幹OEM要贏的勝算太低 只好先吃邊緣。市場。丟IOD除了GF雷包以外 功耗也是問題 還是SOC划算。而且現在那顆也沒多大 GG良率應該很OK。GG缺點就貴、下急單更貴。沒用gg 競爭力在掉一個檔次阿  哪有得選。純亮機拿現成的改哪有多難，只是AMD要先衝Server OE。M用一顆打天下就好。不會多難啊  但是也沒啥競爭力 主要想打的是NB跟加。減沾OEM DT  NB功耗跟封裝都不好 成本也沒省多少。唯一好處大概只有可以多填一點GF的分手費吧 不過原。本的IO die應該就夠填了 幹嘛一直跟恐怖情人勾勾纏。還有，結果Renoir花那麼多資源設計，結果igpu還是用。vega，這樣還不如直接拆下來io再重新設計，省時省。資源。現在聽說設計7nm要三億美金，5nm要五億美金，。為了雞肋花這麼多時間資源，我認為不划算。你認為不划算 那也只是你認為。Renoir SOC化是為了NB 又不是設計給你DT。如果大小核架構一樣 針對單核體質去QC不同頻率組合。超省錢 牙膏廠發大財。第三方軟體不會為了大小核調度重新改寫軟體。。3顆成本跟功耗都爆炸  還想混NB市場喔。真棒，給我來一顆，amd的